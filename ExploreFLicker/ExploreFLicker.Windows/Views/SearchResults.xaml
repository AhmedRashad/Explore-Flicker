<controls:ExtendedPage
    x:Name="PageRoot"
    x:Class="ExploreFlicker.Views.SearchResults"
    DataContext="{Binding SearchViewModel,Source={StaticResource Locator}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ExploreFlicker.Views"
    xmlns:common="using:ExploreFlicker.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:ExploreFlicker.Controls"
    xmlns:converters="using:ExploreFlicker.Converters"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    >

    <Page.Resources>
        <converters:VisibleWhenTrueConverter x:Key="VisibleWhenTrueConverter" />

        <!--Square Image Thumbnail Template-->
        <DataTemplate x:Key="ThumbnailTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Image Grid.Row="0"  Source="{Binding ThumbnailPath}" Stretch="UniformToFill"/>
                <TextBlock Grid.Row="1" Text="{Binding Title}" 
                                   MaxLines="1" TextWrapping="NoWrap" TextAlignment="Center" 
                                   Margin="8,8,8,0"
                                   VerticalAlignment="Bottom"
                                   FontSize="18"/>
            </Grid>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="GalleryItemsPanelTemplate">
            <!--ItemsWrapGrid supports virtualization,
            Don't used WrapGrid or VariableSizedWrapGrid they don't have virtualization-->
            <ItemsWrapGrid ItemWidth="300" ItemHeight="300" Orientation="Vertical"  />
        </ItemsPanelTemplate>

        <Style x:Key="ItemContainerStyle" TargetType="GridViewItem">
            <Setter Property="Margin" Value="0,0,24,24"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <GridViewItemPresenter CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}" 
                                               CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}" 
                                               ContentMargin="0" ContentTransitions="{TemplateBinding ContentTransitions}" 
                                               CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}" 
                                               DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" 
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                                               DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" 
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                                               FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}" 
                                               Padding="{TemplateBinding Padding}"
                                               PointerOverBackgroundMargin="1" 
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" 
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                                               SelectionCheckMarkVisualEnabled="False" 
                                               SelectedBorderThickness="{ThemeResource GridViewItemCompactSelectedBorderThemeThickness}" 
                                               SelectedForeground="White"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="BackButton" Margin="39,59,39,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=PageRoot}"
                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
            <TextBlock x:Name="PageTitle" x:Uid="SearchResultsTitleTb" Text="Search Results" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
                        IsHitTestVisible="false" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="0,0,30,40"/>
            <ProgressBar Height="10" VerticalAlignment="Bottom" 
                         Margin="0,0,0,15" IsIndeterminate="True"
                         Visibility="{Binding IsBusy, Converter={StaticResource VisibleWhenTrueConverter}}" 
                         Grid.ColumnSpan="2" Grid.Column="0" />

        </Grid>

        <Grid Grid.Row="1" x:Name="SearchBarGrid" Margin="116,0,0,20" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>
            <controls:SearchTextBox x:Name="SearchTextBox" 
                                         TextWrapping="Wrap" 
                                        Text="" VerticalAlignment="Stretch" 
                                        HorizontalAlignment="Left"
                                        Height="50"
                                        FontSize="18.667"
                                        d:LayoutOverrides="Height"
                                        Width="500"
                                        SearchRequestedCommand="{Binding SearchPhotosCommand}"
                                        />
        </Grid>

        <!-- Horizontal scrolling grid -->
        <controls:HorizontalGridView
				x:Name="SearchResultsGridView"
				AutomationProperties.AutomationId="ThumbnailsGridView"
				AutomationProperties.Name="Flickr Images" 
				TabIndex="1"
                Grid.Row="2"
                Padding="116,20,116,22"
				IsItemClickEnabled="true"
                IsLoadingMoreEnabled="True"
                LoadMoreRequested="PhotosCollections_OnLoadMoreRequested"
				ItemsSource="{Binding SearchCollection}"
                ItemTemplate="{StaticResource ThumbnailTemplate}"
                EmptyContent="{Binding ErrorMessage}"
                EmptyRefreshCommand="{Binding SearchPhotosCommand}"
                ItemsPanel="{StaticResource GalleryItemsPanelTemplate}"
				SelectionMode="None" ItemContainerStyle="{StaticResource ItemContainerStyle}"
				IsSwipeEnabled="false"    >
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="ItemClick">
                    <core:InvokeCommandAction Command="{Binding PhotoClickedCommand}" InputConverter="{StaticResource ItemClickedConverter}"/>
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </controls:HorizontalGridView>
    </Grid>
</controls:ExtendedPage>
